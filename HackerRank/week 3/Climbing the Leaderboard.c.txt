#include <stdio.h>
#include <stdlib.h>

int* climbingLeaderboard(int* ranked, int ranked_count, int* player, int player_count, int* result_count) {
        int* scores = (int*)malloc(ranked_count * sizeof(int));
    int count = 0;
    scores[count++] = ranked[0];
    for (int i = 1; i < ranked_count; i++) {
        if (ranked[i] != ranked[i - 1]) {
            scores[count++] = ranked[i];
        }
    }

    
    int* ranks = (int*)malloc(player_count * sizeof(int));
    *result_count = player_count;

        int idx = count - 1; // start from the end of scores[]
    for (int i = 0; i < player_count; i++) {
        while (idx >= 0 && player[i] >= scores[idx]) {
            idx--;
        }
        ranks[i] = idx + 2; // rank formula
    }

    free(scores);
    return ranks;
}

int main() {
    int n;
    scanf("%d", &n);
    int ranked[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &ranked[i]);
    }

    int m;
    scanf("%d", &m);
    int player[m];
    for (int i = 0; i < m; i++) {
        scanf("%d", &player[i]);
    }

    int result_count;
    int* result = climbingLeaderboard(ranked, n, player, m, &result_count);

    for (int i = 0; i < result_count; i++) {
        printf("%d\n", result[i]);
    }

    free(result);
    return 0;
}